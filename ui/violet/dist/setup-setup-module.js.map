{"version":3,"sources":["webpack:///./src/app/layout/setup/setup-routing.module.ts","webpack:///./src/app/layout/setup/setup.component.html","webpack:///./src/app/layout/setup/setup.component.scss","webpack:///./src/app/layout/setup/setup.component.ts","webpack:///./src/app/layout/setup/setup.module.ts","webpack:///./src/app/layout/setup/setup.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACJ;AAEnD,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC5B;CACJ,CAAC;AAMF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACf/B,wMAAwM,OAAO,uGAAuG,OAAO,0MAA0M,OAAO,2GAA2G,OAAO,2GAA2G,OAAO,4JAA4J,OAAO,oGAAoG,OAAO,yNAAyN,OAAO,gHAAgH,OAAO,gHAAgH,OAAO,sE;;;;;;;;;;;ACA98C,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACL;AAO7C;IAKE,wBAAmB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAH7C,wBAAmB,GAAG,EAAE,CAAC;QACzB,6BAAwB,GAAG,EAAE,CAAC;IAEmB,CAAC;IAElD,iCAAQ,GAAR;IACA,CAAC;IAED,sCAAa,GAAb;QAAA,iBAIC;QAHG,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,mBAAmB,GAAG,SAAS,EAApC,CAAoC,EACjF,eAAK,IAAI,YAAI,CAAC,mBAAmB,GAAG,SAAS,EAApC,CAAoC,CAAC,CAAC;IACvD,CAAC;IAEC,2CAAkB,GAAlB;QAAA,iBAIC;QAHG,IAAI,CAAC,wBAAwB,GAAG,SAAS,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,wBAAwB,GAAG,SAAS,EAAzC,CAAyC,EAC3F,eAAK,IAAI,YAAI,CAAC,wBAAwB,GAAG,SAAS,EAAzC,CAAyC,CAAC,CAAC;IAC5D,CAAC;IApBQ,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAMiC,2DAAY;OALlC,cAAc,CAsB1B;IAAD,qBAAC;CAAA;AAtB0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACRc;AACM;AAEI;AACS;AACV;AAMlD;IAAA;IAA0B,CAAC;IAAd,WAAW;QAJvB,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,wDAAgB,EAAE,wEAAkB,CAAC;YAC7D,YAAY,EAAE,CAAC,+DAAc,CAAC;SACjC,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiB;AACO;AAKhD;IAII,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,QAAG,GAAG,wBAAwB,CAAC;IAG/B,CAAC;IAED,kCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,CAAC;IACjD,CAAC;IAED,uCAAgB,GAAhB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,CAAC;IACjD,CAAC;IAbQ,YAAY;QAHxB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAK4B,+DAAU;OAJ3B,YAAY,CAcxB;IAAD,mBAAC;CAAA;AAdwB","file":"setup-setup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SetupComponent } from './setup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SetupComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SetupRoutingModule {}\n","module.exports = \"<div>\\n\\n    <app-page-header [heading]=\\\"'Setup'\\\" [icon]=\\\"'fa-edit'\\\"></app-page-header>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-log-6\\\">\\n            <label>  &nbsp; &nbsp; Infrastructure Generator </label>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        &nbsp; &nbsp; <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"generateInfraStatus==='running'\\\" (click)=\\\"generateInfra()\\\">Run</button>\\n        <span *ngIf=\\\"generateInfraStatus==='success'\\\">&nbsp; &nbsp; <i class=\\\"fa fa-2x fa-check\\\"></i></span>\\n        <span *ngIf=\\\"generateInfraStatus==='failure'\\\">&nbsp; &nbsp; <i class=\\\"fa fa-2x fa-times\\\"></i></span>\\n        <span *ngIf=\\\"generateInfraStatus==='running'\\\">&nbsp; &nbsp; <i class=\\\"fa fa-2x fa-spinner\\\"></i></span>\\n    </div>\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-log-6\\\">\\n            <label>  &nbsp; &nbsp; Metis Input Generator </label>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        &nbsp; &nbsp; <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"generateMetisInputStatus==='running'\\\" (click)=\\\"generateMetisInput()\\\">Run</button>\\n        <span *ngIf=\\\"generateMetisInputStatus==='success'\\\">&nbsp; &nbsp; <i class=\\\"fa fa-2x fa-check\\\"></i></span>\\n        <span *ngIf=\\\"generateMetisInputStatus==='failure'\\\">&nbsp; &nbsp; <i class=\\\"fa fa-2x fa-times\\\"></i></span>\\n        <span *ngIf=\\\"generateMetisInputStatus==='running'\\\">&nbsp; &nbsp; <i class=\\\"fa fa-2x fa-spinner\\\"></i></span>\\n    </div>\\n\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {SetupService} from \"./setup.service\";\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent implements OnInit {\n\n  generateInfraStatus = '';\n  generateMetisInputStatus = '';\n\n  constructor(public setupService: SetupService) { }\n\n  ngOnInit() {\n  }\n\n  generateInfra(){\n      this.generateInfraStatus = \"running\";\n      this.setupService.getInfraGen().subscribe(res => this.generateInfraStatus = \"success\",\n          error => this.generateInfraStatus = \"failure\");\n  }\n\n    generateMetisInput(){\n        this.generateMetisInputStatus = \"running\";\n        this.setupService.getMetisInputGen().subscribe(res => this.generateMetisInputStatus = \"success\",\n            error => this.generateMetisInputStatus = \"failure\");\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SetupComponent } from './setup.component';\nimport { SetupRoutingModule } from './setup-routing.module';\nimport { PageHeaderModule } from './../../shared';\n\n@NgModule({\n    imports: [CommonModule, PageHeaderModule, SetupRoutingModule],\n    declarations: [SetupComponent]\n})\nexport class SetupModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SetupService {\n\n    url = \"http://localhost:5000/\";\n\n    constructor(private http: HttpClient) {\n    }\n\n    getInfraGen() {\n        return this.http.get(this.url + \"infra_gen\");\n    }\n\n    getMetisInputGen() {\n        return this.http.get(this.url + \"metis_gen\");\n    }\n}\n"],"sourceRoot":""}