{"version":3,"sources":["webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/key.js","webpack:///./node_modules/@ng-bootstrap/ng-bootstrap/util/positioning.js","webpack:///./src/app/layout/setup/setup-data.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAmB;AAC5B;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACoI;AAClH;AACgB;AACP;AACA;AACD;AACb;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,+DAA+D;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,gCAAgC,kJAA8C,oBAAoB,EAAE,KAAK,IAAI;AACtH,SAAS,kEAAoB;AAC7B,SAAS,iEAAmB;AAC5B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,+DAA+D;AAChI;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,gCAAgC,kJAA8C,oBAAoB,EAAE,KAAK,IAAI;AACtH,SAAS,kEAAoB;AAC7B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,wBAAwB;AAClF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iCAAiC,wHAAkE,0BAA0B,EAAE,GAAG;AAClI,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,gCAAgC,kJAA8C,oBAAoB,EAAE,KAAK,IAAI;AACtH,SAAS,kEAAoB;AAC7B,MAAM;AACN;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,uBAAuB,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4LAA8E,6EAAmC,EAAE;AACnH;AACA,4LAA8E,2CAA2C,EAAE;AAC3H;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,yCAAyC;AAC3G,gEAAgE,4DAA4D;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAA0B,4DAA4D,6BAA6B,EAAE,IAAI;AAClI;AACA;AACA,8CAA8C;AAC9C,SAAS,yEAA2B;AACpC,SAAS,4EAA2B;AACpC,SAAS,gCAAgC,gIAAkC,IAAI;AAC/E,SAAS,8DAAgB;AACzB,MAAM;AACN;AACA,mBAAmB,6FAA+C;AAClE,qBAAqB,+FAAiD;AACtE,uBAAuB,4DAAc;AACrC,mBAAmB,6EAA+B;AAClD,uBAAuB,4DAAc;AACrC,wBAAwB,6DAAe;AACvC;AACA;AACA,CAAC;AACO;AACR,oC;;;;;;;;;;;;;;;;;;;;;;;;;ACnRmB;AAC0D;AACjD;AAC8B;AAC9B;AAC5B;AACA;AACA;AACA;AACA,6CAA6C,SAAS,gHAA+D;AACrH;AACA,SAAS,uEAAyB,0EAA0E,IAAI;AAChH;AACA;AACA,CAAC;AACO;AACR,2C;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB;AACnB,+B;;;;;;;;;;;;;;ACfA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,yCAAyC;AACtG,+DAA+D,yCAAyC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAcuBAAuB,EAAE;AACnF;AACA;AACA;AACA;AACA,mDAAmD,qCAAqC,EAAE;AAC1F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qBAAqB,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU,2BAA2B,EAAE,EAAE;AAClF;AACA,uC;;;;;;;;;;;;;;;;ACrSgD;;;AAEhD;IAmCI,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QA9BpC,QAAG,GAAG,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEtD,UAAK,GAAG,EAAE,CAAC;QACX,WAAM,GAAG,EAAE,CAAC;QAEZ,gBAAW,GAAG,EAAE,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAElB,kBAAa,GAAG,EAAE,CAAC;QAEnB,sBAAiB,GAAG,EAAE,CAAC;QACvB,uBAAkB,GAAG,EAAE,CAAC;QACxB,mBAAc,GAAG,EAAE,CAA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","file":"layout-layout-module-ngfactory~setup-setup-module-ngfactory.js","sourcesContent":["import { Injectable } from '@angular/core';\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nvar NgbDropdownConfig = /** @class */ (function () {\n    function NgbDropdownConfig() {\n        this.autoClose = true;\n        this.placement = 'bottom-left';\n    }\n    NgbDropdownConfig.decorators = [\n        { type: Injectable },\n    ];\n    return NgbDropdownConfig;\n}());\nexport { NgbDropdownConfig };\n//# sourceMappingURL=dropdown-config.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { forwardRef, Inject, Directive, Input, Output, EventEmitter, ElementRef, ContentChild, NgZone, Renderer2, ChangeDetectorRef } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { fromEvent, race, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { NgbDropdownConfig } from './dropdown-config';\nimport { positionElements } from '../util/positioning';\nimport { Key } from '../util/key';\n/**\n */\nvar NgbDropdownMenu = /** @class */ (function () {\n    function NgbDropdownMenu(dropdown, _elementRef, _renderer) {\n        this.dropdown = dropdown;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.placement = 'bottom';\n        this.isOpen = false;\n    }\n    NgbDropdownMenu.prototype.isEventFrom = function ($event) { return this._elementRef.nativeElement.contains($event.target); };\n    NgbDropdownMenu.prototype.position = function (triggerEl, placement) {\n        this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\n    };\n    NgbDropdownMenu.prototype.applyPlacement = function (_placement) {\n        // remove the current placement classes\n        this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\n        this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n        this.placement = _placement;\n        /**\n             * apply the new placement\n             * in case of top use up-arrow or down-arrow otherwise\n             */\n        if (_placement.search('^top') !== -1) {\n            this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\n        }\n        else {\n            this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n        }\n    };\n    NgbDropdownMenu.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdownMenu]',\n                    host: { '[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownMenu.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgbDropdown; }),] },] },\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    return NgbDropdownMenu;\n}());\nexport { NgbDropdownMenu };\n/**\n * Marks an element to which dropdown menu will be anchored. This is a simple version\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\n * events other than click.\n *\n * @since 1.1.0\n */\nvar NgbDropdownAnchor = /** @class */ (function () {\n    function NgbDropdownAnchor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this._elementRef = _elementRef;\n        this.anchorEl = _elementRef.nativeElement;\n    }\n    NgbDropdownAnchor.prototype.isEventFrom = function ($event) { return this._elementRef.nativeElement.contains($event.target); };\n    NgbDropdownAnchor.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdownAnchor]',\n                    host: { 'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()' }\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownAnchor.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgbDropdown; }),] },] },\n        { type: ElementRef, },\n    ]; };\n    return NgbDropdownAnchor;\n}());\nexport { NgbDropdownAnchor };\n/**\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\n * alternative.\n */\nvar NgbDropdownToggle = /** @class */ (function (_super) {\n    __extends(NgbDropdownToggle, _super);\n    function NgbDropdownToggle(dropdown, elementRef) {\n        return _super.call(this, dropdown, elementRef) || this;\n    }\n    NgbDropdownToggle.prototype.toggleOpen = function () { this.dropdown.toggle(); };\n    NgbDropdownToggle.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngbDropdownToggle]',\n                    host: {\n                        'class': 'dropdown-toggle',\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                        '(click)': 'toggleOpen()'\n                    },\n                    providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(function () { return NgbDropdownToggle; }) }]\n                },] },\n    ];\n    /** @nocollapse */\n    NgbDropdownToggle.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgbDropdown; }),] },] },\n        { type: ElementRef, },\n    ]; };\n    return NgbDropdownToggle;\n}(NgbDropdownAnchor));\nexport { NgbDropdownToggle };\n/**\n * Transforms a node into a dropdown.\n */\nvar NgbDropdown = /** @class */ (function () {\n    function NgbDropdown(_changeDetector, config, _document, _ngZone) {\n        var _this = this;\n        this._changeDetector = _changeDetector;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._closed$ = new Subject();\n        /**\n           *  Defines whether or not the dropdown-menu is open initially.\n           */\n        this._open = false;\n        /**\n           *  An event fired when the dropdown is opened or closed.\n           *  Event's payload equals whether dropdown is open.\n           */\n        this.openChange = new EventEmitter();\n        this.placement = config.placement;\n        this.autoClose = config.autoClose;\n        this._zoneSubscription = _ngZone.onStable.subscribe(function () { _this._positionMenu(); });\n    }\n    NgbDropdown.prototype.ngOnInit = function () {\n        if (this._menu) {\n            this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement);\n        }\n        if (this._open) {\n            this._setCloseHandlers();\n        }\n    };\n    /**\n     * Checks if the dropdown menu is open or not.\n     */\n    /**\n       * Checks if the dropdown menu is open or not.\n       */\n    NgbDropdown.prototype.isOpen = /**\n       * Checks if the dropdown menu is open or not.\n       */\n    function () { return this._open; };\n    /**\n     * Opens the dropdown menu of a given navbar or tabbed navigation.\n     */\n    /**\n       * Opens the dropdown menu of a given navbar or tabbed navigation.\n       */\n    NgbDropdown.prototype.open = /**\n       * Opens the dropdown menu of a given navbar or tabbed navigation.\n       */\n    function () {\n        if (!this._open) {\n            this._open = true;\n            this._positionMenu();\n            this.openChange.emit(true);\n            this._setCloseHandlers();\n        }\n    };\n    NgbDropdown.prototype._setCloseHandlers = function () {\n        var _this = this;\n        if (this.autoClose) {\n            this._ngZone.runOutsideAngular(function () {\n                var escapes$ = fromEvent(_this._document, 'keyup')\n                    .pipe(takeUntil(_this._closed$), filter(function (event) { return event.which === Key.Escape; }));\n                var clicks$ = fromEvent(_this._document, 'click')\n                    .pipe(takeUntil(_this._closed$), filter(function (event) { return _this._shouldCloseFromClick(event); }));\n                race([escapes$, clicks$]).pipe(takeUntil(_this._closed$)).subscribe(function () {\n                    return _this._ngZone.run(function () {\n                        _this.close();\n                        _this._changeDetector.markForCheck();\n                    });\n                });\n            });\n        }\n    };\n    /**\n     * Closes the dropdown menu of a given navbar or tabbed navigation.\n     */\n    /**\n       * Closes the dropdown menu of a given navbar or tabbed navigation.\n       */\n    NgbDropdown.prototype.close = /**\n       * Closes the dropdown menu of a given navbar or tabbed navigation.\n       */\n    function () {\n        if (this._open) {\n            this._open = false;\n            this._closed$.next();\n            this.openChange.emit(false);\n        }\n    };\n    /**\n     * Toggles the dropdown menu of a given navbar or tabbed navigation.\n     */\n    /**\n       * Toggles the dropdown menu of a given navbar or tabbed navigation.\n       */\n    NgbDropdown.prototype.toggle = /**\n       * Toggles the dropdown menu of a given navbar or tabbed navigation.\n       */\n    function () {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    };\n    NgbDropdown.prototype._shouldCloseFromClick = function (event) {\n        if (event.button !== 2 && !this._isEventFromToggle(event)) {\n            if (this.autoClose === true) {\n                return true;\n            }\n            else if (this.autoClose === 'inside' && this._isEventFromMenu(event)) {\n                return true;\n            }\n            else if (this.autoClose === 'outside' && !this._isEventFromMenu(event)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    NgbDropdown.prototype.ngOnDestroy = function () {\n        this._closed$.next();\n        this._zoneSubscription.unsubscribe();\n    };\n    NgbDropdown.prototype._isEventFromToggle = function ($event) { return this._anchor.isEventFrom($event); };\n    NgbDropdown.prototype._isEventFromMenu = function ($event) { return this._menu ? this._menu.isEventFrom($event) : false; };\n    NgbDropdown.prototype._positionMenu = function () {\n        if (this.isOpen() && this._menu) {\n            this._menu.position(this._anchor.anchorEl, this.placement);\n        }\n    };\n    NgbDropdown.decorators = [\n        { type: Directive, args: [{ selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: { '[class.show]': 'isOpen()' } },] },\n    ];\n    /** @nocollapse */\n    NgbDropdown.ctorParameters = function () { return [\n        { type: ChangeDetectorRef, },\n        { type: NgbDropdownConfig, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n        { type: NgZone, },\n    ]; };\n    NgbDropdown.propDecorators = {\n        \"_menu\": [{ type: ContentChild, args: [NgbDropdownMenu,] },],\n        \"_anchor\": [{ type: ContentChild, args: [NgbDropdownAnchor,] },],\n        \"autoClose\": [{ type: Input },],\n        \"_open\": [{ type: Input, args: ['open',] },],\n        \"placement\": [{ type: Input },],\n        \"openChange\": [{ type: Output },],\n    };\n    return NgbDropdown;\n}());\nexport { NgbDropdown };\n//# sourceMappingURL=dropdown.js.map","import { NgModule } from '@angular/core';\nimport { NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu } from './dropdown';\nimport { NgbDropdownConfig } from './dropdown-config';\nexport { NgbDropdown, NgbDropdownToggle, NgbDropdownMenu } from './dropdown';\nexport { NgbDropdownConfig } from './dropdown-config';\nvar NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu];\nvar NgbDropdownModule = /** @class */ (function () {\n    function NgbDropdownModule() {\n    }\n    NgbDropdownModule.forRoot = function () { return { ngModule: NgbDropdownModule, providers: [NgbDropdownConfig] }; };\n    NgbDropdownModule.decorators = [\n        { type: NgModule, args: [{ declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES },] },\n    ];\n    return NgbDropdownModule;\n}());\nexport { NgbDropdownModule };\n//# sourceMappingURL=dropdown.module.js.map","export var Key;\n(function (Key) {\n    Key[Key[\"Tab\"] = 9] = \"Tab\";\n    Key[Key[\"Enter\"] = 13] = \"Enter\";\n    Key[Key[\"Escape\"] = 27] = \"Escape\";\n    Key[Key[\"Space\"] = 32] = \"Space\";\n    Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n    Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n    Key[Key[\"End\"] = 35] = \"End\";\n    Key[Key[\"Home\"] = 36] = \"Home\";\n    Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n//# sourceMappingURL=key.js.map","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nvar \n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nPositioning = /** @class */ (function () {\n    function Positioning() {\n    }\n    Positioning.prototype.getAllStyles = function (element) { return window.getComputedStyle(element); };\n    Positioning.prototype.getStyle = function (element, prop) { return this.getAllStyles(element)[prop]; };\n    Positioning.prototype.isStaticPositioned = function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    Positioning.prototype.offsetParent = function (element) {\n        var offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    Positioning.prototype.position = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elPosition;\n        var parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n        }\n        else {\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    Positioning.prototype.offset = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elBcr = element.getBoundingClientRect();\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        var targetElStyles = this.getAllStyles(targetElement);\n        var targetElBCR = targetElement.getBoundingClientRect();\n        var placementPrimary = placement.split('-')[0] || 'top';\n        var placementSecondary = placement.split('-')[1] || 'center';\n        var targetElPosition = {\n            'height': targetElBCR.height || targetElement.offsetHeight,\n            'width': targetElBCR.width || targetElement.offsetWidth,\n            'top': 0,\n            'bottom': targetElBCR.height || targetElement.offsetHeight,\n            'left': 0,\n            'right': targetElBCR.width || targetElement.offsetWidth\n        };\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.top =\n                    hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height;\n                break;\n            case 'left':\n                targetElPosition.left =\n                    hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width;\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                targetElPosition.top = hostElPosition.top;\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                targetElPosition.left = hostElPosition.left;\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n                }\n                else {\n                    targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n                }\n                break;\n        }\n        targetElPosition.top = Math.round(targetElPosition.top);\n        targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        targetElPosition.left = Math.round(targetElPosition.left);\n        targetElPosition.right = Math.round(targetElPosition.right);\n        return targetElPosition;\n    };\n    // get the availble placements of the target element in the viewport dependeing on the host element\n    // get the availble placements of the target element in the viewport dependeing on the host element\n    Positioning.prototype.getAvailablePlacements = \n    // get the availble placements of the target element in the viewport dependeing on the host element\n    function (hostElement, targetElement) {\n        var availablePlacements = [];\n        var hostElemClientRect = hostElement.getBoundingClientRect();\n        var targetElemClientRect = targetElement.getBoundingClientRect();\n        var html = document.documentElement;\n        var windowHeight = window.innerHeight || html.clientHeight;\n        var windowWidth = window.innerWidth || html.clientWidth;\n        var hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;\n        var hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2;\n        // left: check if target width can be placed between host left and viewport start and also height of target is\n        // inside viewport\n        if (targetElemClientRect.width < hostElemClientRect.left) {\n            // check for left only\n            if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n                windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n                availablePlacements.splice(availablePlacements.length, 1, 'left');\n            }\n            // check for left-top and left-bottom\n            this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\n        }\n        // top: target height is less than host top\n        if (targetElemClientRect.height < hostElemClientRect.top) {\n            if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n                windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n                availablePlacements.splice(availablePlacements.length, 1, 'top');\n            }\n            this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\n        }\n        // right: check if target width can be placed between host right and viewport end and also height of target is\n        // inside viewport\n        if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {\n            // check for right only\n            if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n                windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n                availablePlacements.splice(availablePlacements.length, 1, 'right');\n            }\n            // check for right-top and right-bottom\n            this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\n        }\n        // bottom: check if there is enough space between host bottom and viewport end for target height\n        if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {\n            if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n                windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n                availablePlacements.splice(availablePlacements.length, 1, 'bottom');\n            }\n            this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\n        }\n        return availablePlacements;\n    };\n    /**\n     * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n     * primaryplacement: left|right\n     * availablePlacementArr: array in which available placemets to be set\n     */\n    /**\n       * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n       * primaryplacement: left|right\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    Positioning.prototype.setSecondaryPlacementForLeftRight = /**\n       * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n       * primaryplacement: left|right\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {\n        var html = document.documentElement;\n        // check for left-bottom\n        if (targetElemClientRect.height <= hostElemClientRect.bottom) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\n        }\n        if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\n        }\n    };\n    /**\n     * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n     * primaryplacement: top|bottom\n     * availablePlacementArr: array in which available placemets to be set\n     */\n    /**\n       * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n       * primaryplacement: top|bottom\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    Positioning.prototype.setSecondaryPlacementForTopBottom = /**\n       * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n       * primaryplacement: top|bottom\n       * availablePlacementArr: array in which available placemets to be set\n       */\n    function (hostElemClientRect, targetElemClientRect, primaryPlacement, availablePlacementArr) {\n        var html = document.documentElement;\n        // check for left-bottom\n        if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\n        }\n        if (targetElemClientRect.width <= hostElemClientRect.right) {\n            availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\n        }\n    };\n    return Positioning;\n}());\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport { Positioning };\nvar positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(hostElement, targetElement, placement, appendToBody) {\n    var placementVals = Array.isArray(placement) ? placement : [placement];\n    // replace auto placement with other placements\n    var hasAuto = placementVals.findIndex(function (val) { return val === 'auto'; });\n    if (hasAuto >= 0) {\n        ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top',\n            'left-bottom', 'right-top', 'right-bottom',\n        ].forEach(function (obj) {\n            if (placementVals.find(function (val) { return val.search('^' + obj) !== -1; }) == null) {\n                placementVals.splice(hasAuto++, 1, obj);\n            }\n        });\n    }\n    // coordinates where to position\n    var topVal = 0, leftVal = 0;\n    var appliedPlacement;\n    // get available placements\n    var availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\n    var _loop_1 = function (item, index) {\n        // check if passed placement is present in the available placement or otherwise apply the last placement in the\n        // passed placement list\n        if ((availablePlacements.find(function (val) { return val === item; }) != null) || (placementVals.length === index + 1)) {\n            appliedPlacement = item;\n            var pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\n            topVal = pos.top;\n            leftVal = pos.left;\n            return \"break\";\n        }\n    };\n    // iterate over all the passed placements\n    for (var _i = 0, _a = toItemIndexes(placementVals); _i < _a.length; _i++) {\n        var _b = _a[_i], item = _b.item, index = _b.index;\n        var state_1 = _loop_1(item, index);\n        if (state_1 === \"break\")\n            break;\n    }\n    targetElement.style.top = topVal + \"px\";\n    targetElement.style.left = leftVal + \"px\";\n    return appliedPlacement;\n}\n// function to get index and item of an array\nfunction toItemIndexes(a) {\n    return a.map(function (item, index) { return ({ item: item, index: index }); });\n}\n//# sourceMappingURL=positioning.js.map","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SetupDataService {\r\n\r\n    url = 'http://' + window.location.hostname + ':5000/';\r\n\r\n    files = {};\r\n    images = {};\r\n\r\n    inputFileDD = {};\r\n    outputFileDD = {};\r\n\r\n    consoleOutput = {};\r\n\r\n    summaryInfraInput = {};\r\n    summaryInfraOutput = {};\r\n    inputInfraFile = '';\r\n    outputInfraFile = '';\r\n    generateInfraStatus = '';\r\n\r\n    summaryPartitionInput = {};\r\n    summaryPartitionOutput = {};\r\n    inputPartitionFile = '';\r\n    outputPartitionFile = '';\r\n    partitionStatus = '';\r\n\r\n    inputDepFile = '';\r\n    outputDepFile = '';\r\n    deploymentStatus = '';\r\n\r\n    inputSanFile = '';\r\n    outputSanFile = '';\r\n    sanityStatus = '';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n\r\n    // Infra\r\n\r\n    getSummaryInfraInput() {\r\n        const temp = JSON.parse(this.files['infra_gen.json']);\r\n        const temp1 = JSON.parse(this.files['device_types.json']);\r\n        this.summaryInfraInput['pvt_networks'] = Object.keys(temp.private_networks).length;\r\n        this.summaryInfraInput['pub_networks'] = Object.keys(temp.public_networks).length;\r\n        this.summaryInfraInput['pvt_bandwidth'] = temp.network.private_networks.bandwidth_mbps.join(', ');\r\n        this.summaryInfraInput['pub_bandwidth'] = temp.network.public_networks.bandwidth_mbps.join(', ');\r\n        this.summaryInfraInput['pvt_latency'] = temp.network.private_networks.latency_ms.join(', ');\r\n        this.summaryInfraInput['pub_latency'] = temp.network.public_networks.latency_ms.join(', ');\r\n        this.summaryInfraInput['pvt_dev_cnt'] = 0;\r\n        this.summaryInfraInput['pvt_dev'] = {};\r\n        this.summaryInfraInput['pub_dev'] = {};\r\n        this.summaryInfraInput['dev_cnt'] = 1;\r\n        for (const i in temp1) {\r\n            this.summaryInfraInput['pvt_dev'][i] = 0;\r\n            this.summaryInfraInput['pub_dev'][i] = 0;\r\n            this.summaryInfraInput['dev_cnt'] += 1;\r\n        }\r\n        for (const i in temp['private_networks']) {\r\n            this.summaryInfraInput['pvt_dev_cnt'] += +temp['private_networks'][i]['number_devices'] + 1;\r\n            this.summaryInfraInput['pvt_dev'][temp['private_networks'][i]['device_type']] += +temp['private_networks'][i]['number_devices'] + 1;\r\n        }\r\n        this.summaryInfraInput['pub_dev_cnt'] = 0;\r\n        for (const i in temp['public_networks']) {\r\n            for (const j of temp['public_networks'][i]) {\r\n                this.summaryInfraInput['pub_dev_cnt'] += +j['number_devices'];\r\n                this.summaryInfraInput['pub_dev'][j['device_type']] += +j['number_devices'];\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getSummaryInfraOutput() {\r\n        const temp = JSON.parse(this.files['infra_config.json']);\r\n        const temp1 = JSON.parse(this.files['infra_gen.json']);\r\n        const temp2 = JSON.parse(this.files['device_types.json']);\r\n        this.summaryInfraOutput['pvt'] = temp['private_networks'];\r\n        this.summaryInfraOutput['pub'] = temp['public_networks'];\r\n        this.summaryInfraOutput['pvt_dev'] = {};\r\n        this.summaryInfraOutput['pub_dev'] = {};\r\n        for (const i in temp1['private_networks']) {\r\n            this.summaryInfraOutput['pvt_dev'][i] = {};\r\n            for (const j in temp2) {\r\n                if (j === temp1['private_networks'][i]['device_type'])\r\n                    this.summaryInfraOutput['pvt_dev'][i][j] = +temp1['private_networks'][i]['number_devices'] + 1;\r\n                else\r\n                    this.summaryInfraOutput['pvt_dev'][i][j] = 0;\r\n            }\r\n        }\r\n        for (const i in temp1['public_networks']) {\r\n            this.summaryInfraOutput['pub_dev'][i] = {};\r\n            for(const k in temp2){\r\n                this.summaryInfraOutput['pub_dev'][i][k] = 0;\r\n            }\r\n            for (const j of temp1['public_networks'][i]) {\r\n                        this.summaryInfraOutput['pub_dev'][i][j['device_type']] = +j['number_devices'];\r\n            }\r\n        }\r\n        console.log(this.summaryInfraOutput['pub_dev']);\r\n\r\n\r\n    }\r\n\r\n    getInfraInput() {\r\n        this.http.get(this.url + \"infra_gen_input\").subscribe(res => {\r\n            this.files['infra_gen.json'] = res['infra_gen.json'];\r\n            this.files['device_types.json'] = res['device_types.json'];\r\n            this.inputFileDD['infra'] = ['infra_gen.json'];\r\n            this.inputInfraFile = this.inputFileDD['infra'][0];\r\n            this.getSummaryInfraInput();\r\n        });\r\n    }\r\n\r\n    getInfraOutput() {\r\n        this.http.get(this.url + \"infra_gen_output\").subscribe(res => {\r\n            this.files['infra_config.json'] = res['data'];\r\n            this.outputFileDD['infra'] = ['infra_config.json'];\r\n            this.outputInfraFile = this.outputFileDD['infra'][0];\r\n            this.getSummaryInfraOutput();\r\n        });\r\n    }\r\n\r\n    // Partition\r\n\r\n    getSummaryPartitionInput() {\r\n        this.summaryPartitionInput['vmc'] = JSON.parse(this.files['vm_config.json']);\r\n        this.summaryPartitionInput['vmt'] = JSON.parse(this.files['vm_types.json']);\r\n        this.summaryPartitionInput['dvt'] = JSON.parse(this.files['device_types.json']);\r\n        this.summaryPartitionInput['vm_count'] = Object.keys(this.summaryPartitionInput['vmc']['container_VM']).length;\r\n    }\r\n\r\n    getSummaryPartitionOutput() {\r\n        const temp = JSON.parse(this.files['metis_partitions.json']);\r\n        var i = 0;\r\n        this.summaryPartitionOutput['cnt'] = {};\r\n\r\n        Object.entries(this.summaryPartitionInput['vmc']['container_VM']).forEach(\r\n            ([key, value]) => {\r\n                this.summaryPartitionOutput['cnt'][i.toString()] = {'name': key, 'cnt': 0};\r\n                i++;\r\n            }\r\n        );\r\n\r\n        for (const j in temp) {\r\n            this.summaryPartitionOutput['cnt'][temp[j]]['cnt']++;\r\n        }\r\n    }\r\n\r\n    getPartitionPlots() {\r\n        this.http.get(this.url + \"partition_plot_coremark\", {responseType: 'blob'}).subscribe(res => {\r\n            this.createImageFromBlob(res, 'partition_coremark');\r\n            this.http.get(this.url + \"partition_plot_disk\", {responseType: 'blob'}).subscribe(res => {\r\n                this.createImageFromBlob(res, 'partition_disk');\r\n                this.http.get(this.url + \"partition_plot_memory\", {responseType: 'blob'}).subscribe(res => {\r\n                    this.createImageFromBlob(res, 'partition_memory');\r\n                });\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    getPartitionInput() {\r\n        this.http.get(this.url + \"partition_input\").subscribe(res => {\r\n            this.files['vm_config.json'] = res['vm_config.json'];\r\n            this.files['vm_types.json'] = res['vm_types.json'];\r\n            this.inputFileDD['partition'] = ['vm_types.json', 'vm_config.json', 'device_types.json'];\r\n            this.inputPartitionFile = this.inputFileDD['partition'][0];\r\n            this.getSummaryPartitionInput();\r\n        });\r\n    }\r\n\r\n    getPartitionOutput() {\r\n        this.http.get(this.url + \"partition_output\").subscribe(res => {\r\n            this.files['metis_partitions.json'] = res['metis_partitions.json'];\r\n            this.outputFileDD['partition'] = ['metis_partitions.json'];\r\n            this.outputPartitionFile = this.outputFileDD['partition'][0];\r\n            this.getSummaryPartitionOutput();\r\n        });\r\n    }\r\n\r\n    // Deployment\r\n\r\n    getDeploymentInput() {\r\n        this.http.get(this.url + \"deployment_input\").subscribe(res => {\r\n            this.files['deployment.json'] = res['deployment.json'];\r\n            this.files['sensor_types.json'] = res['sensor_types.json'];\r\n            this.inputFileDD['deployment'] = ['infra_config.json', 'vm_types.json', 'device_types.json', 'vm_config.json',\r\n                'metis_partitions.json', 'deployment.json', 'sensor_types.json'];\r\n            this.inputDepFile = this.inputFileDD['deployment'][0];\r\n        });\r\n    }\r\n\r\n    getDeploymentOutput() {\r\n        this.http.get(this.url + \"deployment_output\").subscribe(res => {\r\n            this.files['deployment_output.json'] = res['deployment_output.json'];\r\n            this.outputFileDD['deployment'] = ['deployment_output.json'];\r\n            this.outputDepFile = this.outputFileDD['deployment'][0];\r\n        });\r\n    }\r\n\r\n    getDeploymentPlots() {\r\n        this.http.get(this.url + \"deployment_plot\", {responseType: 'blob'}).subscribe(res => {\r\n            this.createImageFromBlob(res, 'deployment_network');\r\n        });\r\n\r\n    }\r\n\r\n    createImageFromBlob(image: Blob, name: string) {\r\n        let reader = new FileReader();\r\n        reader.addEventListener(\"load\", () => {\r\n            this.images[name] = reader.result;\r\n        }, false);\r\n\r\n        if (image) {\r\n            reader.readAsDataURL(image);\r\n        }\r\n    }\r\n\r\n    // Sanity\r\n\r\n    getSanityInput() {\r\n        this.inputFileDD['sanity'] = ['infra_config.json', 'vm_config.json', 'metis_partitions.json', 'deployment.json',\r\n            'sensor_types.json'];\r\n        this.inputSanFile = this.inputFileDD['sanity'][0];\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}